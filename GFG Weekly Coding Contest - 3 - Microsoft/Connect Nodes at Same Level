

//User function Template for Java

/*
class Node{
    int data;
    Node left;
    Node right;
    Node nextRight;
    Node(int data){
        this.data = data;
        left=null;
        right=null;
        nextRight = null;
    }
} */
class Solution {
    public void connect(Node root) 
    {
        // code here
        
        if(root == null)
        {
            return;
        }
        
        
        Queue<Node> q = new LinkedList<>();
        q.add(root);
        
        while(!q.isEmpty())
        {
            
            int len = q.size();
            
            for(int i=0; i<len; i++)
            {
                Node curr = q.poll();
                
                if(curr.left != null)
                {
                    q.add(curr.left);
                    
                }
                
                if(curr.right != null)
                {
                    q.add(curr.right);
                    
                }
                
                if(i == len-1)
                {
                    curr.nextRight = null;
                    
                }
                else
                {
                    curr.nextRight = q.peek();
                }
            }
        }
        
        
        
        
        
        
        /*
        if(root == null)
        {
            return;
        }
        
        
        Queue<Node> que = new LinkedList<>();
        que.add(root);
        que.add(null);
        
        
        
        while(!que.isEmpty())
        {
            Node curr = que.remove();
            
            if(curr == null && que.isEmpty())
            {
                return;
                
            }
            
            if(curr == null)
            {
                que.add(null);
                
            }
            else
            {
                curr.nextRight = que.peek();
                
                
                if (curr.left != null)
                {
                    que.add(curr.left);
                }
                
                if (curr.right != null) 
                {
                    que.add(curr.right);
                }
            }
            
            
            
            
        }
        
        return;
        
        */
        
        
        
        
    }
}
