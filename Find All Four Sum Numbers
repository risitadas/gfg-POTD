

// User function Template for Java

// arr[] : int input array of integers
// k : the quadruple sum required

class Solution {
    public ArrayList<ArrayList<Integer>> fourSum(int[] arr, int k) 
    {
        // code here
        
        int n = arr.length;
        Arrays.sort(arr);
        
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        
     /*   if(n > 4)
        {
            return result;
        }
        
        */
        
        
        for(int i=0; i<n-3; i++)
        {
            /*
            if(arr[i] > 0 && arr[i] > k)
            {
                break;
                
            }
            */
            
            if(i > 0 && arr[i] == arr[i-1])
            {
                continue;
                
            }
            
            for(int j=i+1; j<n-2; j++)
            {
                if(j > i+1 && arr[j] == arr[j-1])
                {
                    continue;
                }
                
                int low = j+1, high = n-1;
                
                while(low < high)
                {
                    int sum = arr[i] + arr[j] + arr[low] + arr[high];
                    
                    if(sum == k)
                    {
                        
                        ArrayList<Integer> list = new ArrayList<>();
                        list.add(arr[i]);
                        list.add(arr[j]);
                        list.add(arr[low]);
                        list.add(arr[high]);
                        
                        result.add(list);
                        
                        low++;
                        high--;
                        
                        
                        
                        while(low< high && arr[low] == arr[low-1])
                        {
                            low++;
                            
                        }
                        
                        while(low < high && arr[high] == arr[high+1])
                        {
                            high--;
                            
                        }
                        
                        
                    }
                    else if(sum < k)
                    {
                        low++;
                        
                    }
                    else
                    {
                        high--;
                        
                    }
                    
                }
            }
        }
        
        
        return result;
        
        
        
        
        
        
    }
}
