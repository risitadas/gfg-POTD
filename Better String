

// User function Template for Java

class Solution {
    
    public static int subseq(String s,int[] arr)
    {
        int n = s.length();
        Arrays.fill(arr,-1);
        int count = 1;
        
        for(int i=0;i<n ;i++)
        {
            int indx = s.charAt(i)-'a';
            
            if(arr[indx]==-1)
            {
                arr[indx] = count;
                count *= 2;
            }
            else
            {
                
                int x = arr[indx];
                arr[indx] = count;
                count = (count*2)-x;
                
            }
            
        }
        
        return count;
        
    }

    
    /*
    public static int countSub(String str) 
    {
        
        int n = str.length();
        int[] dp = new int[n + 1];
        dp[0] = 1;
        
        int[] last = new int[256];
        Arrays.fill(last, -1);
        
        
        for (int i = 1; i <= n; i++) 
        {
            dp[i] = 2 * dp[i - 1];

            if (last[str.charAt(i - 1)] != -1) 
            {
                dp[i] = dp[i] - dp[last[str.charAt(i - 1)]];
            }
            
            last[str.charAt(i - 1)] = (i - 1);
        }
        
        
        return dp[n];
    }
    
    */



    public static String betterString(String str1, String str2)
    {
        // Code here
        
        int[] arr = new int[26];
        int m = subseq(str1, arr);
        int n = subseq(str2, arr);
        
        if (m <n) 
        {
            return str2;
        }
        return str1;
        
        
        
        
    }
}
