

class Solution{

	public int perfectSum(int arr[],int n, int sum) 
	{ 
	    // Your code goes here
	    
	    int count = 0;
	    int[][] dp = new int[n][sum+1];
	    
	    for(int i=0;i<n;i++)
	    {
	        
	        for(int j=0;j<=sum;j++)
	        {
	            
	            dp[i][j] = -1;
	        }
	        
	    }
	    
        count = getperfectSum(arr, 0, sum, 0, dp);	    
	    return count;

	    
	    
	    
	} 
	
	public int getperfectSum(int[] arr, int ind, int sum, int curr, int[][] dp)
	{
	    
	    if(curr>sum)
	    {
	        return 0;
	        
	    }
	    
	    if(curr==sum && ind==arr.length)
	    {
	        return 1;
	        
	    }
	    
	    if(ind>=arr.length)
	    {
	        return 0;
	        
	    }
	    
	    if(dp[ind][curr]!=-1)
	    {
	        return dp[ind][curr];
	        
	    }
	    
	    int count = 0;
	    
	    count = (count + getperfectSum(arr, ind+1, sum, curr+arr[ind], dp)) % 1000000007;
	    count = (count + getperfectSum(arr, ind+1, sum, curr, dp)) % 1000000007;
	    
	    return dp[ind][curr] = count;
	    
	    
	    
	    
	    
	    
	}
}
