

class Solution {
    // Function to return a list containing the DFS traversal of the graph.
    
    
    public void dfs(ArrayList<ArrayList<Integer>> graph, int node, boolean[] visited, ArrayList<Integer> result) 
    {
        visited[node] = true;
        
        result.add(node);
        
        for(int nbr: graph.get(node))
        {
            if(!visited[nbr])
            {
                
                dfs(graph, nbr, visited, result);
            }
            
        }
    }
    
    
    
    
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        // Code here
        
        ArrayList<Integer> result = new ArrayList<>();
        
        boolean[] visited = new boolean[V];
        
        dfs(adj, 0, visited, result);
        
        return result;
        
        
        
        
        
        
        
        
        
    }
}
