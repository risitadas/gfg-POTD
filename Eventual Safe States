

// User function Template for Java

class Solution {

    List<Integer> eventualSafeNodes(int V, List<List<Integer>> adj) 
    {

        // Your code here
        
        ArrayList<List<Integer>> revadj = new ArrayList<>();
        ArrayList<Integer> result = new ArrayList<Integer>();
        
        Queue<Integer> que = new LinkedList<>();
        
        int ind = 0;
        int[] indegree = new int[V];
        
        for(int i=0; i<V; i++)
        {
            
            revadj.add(new ArrayList<>());
        }
        
        for(int i=0; i<V; i++)
        {
            
            for( int n : adj.get(i))
            {
                revadj.get(n).add(i);
                
            }
        }
        
        
        
        
        for(int i=0; i<V; i++)
        {
            for(int x : revadj.get(i))
            {
                
                indegree[x]++;
            }
        }
        
        for(int i=0; i<V; i++)
        {
            if(indegree[i] == 0)
            {
                
                que.add(i);
            }
        }
        
        while( !que.isEmpty())
        {
            int u = que.poll();
            result.add(u);
            
            for(int k : revadj.get(u))
            {
                if(--indegree[k] == 0)
                {
                    que.add(k);
                    
                }
            }
        }
        
        Collections.sort(result);
        return result;

        
        
        
        
        
        
        
        
        
        
    }
}
