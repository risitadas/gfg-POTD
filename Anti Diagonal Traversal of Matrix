
//User function Template for Java

class Solution
{
    public int[] antiDiagonalPattern(int[][] matrix)
    {
        // Code here
        
        
        int n = matrix.length;
        int[] result = new int[n*n];
        int idx = 0;
        
        for(int c=0; c<n; c++)
        {
            int j=c;
            
            for(int i=0; j>=0; i++)
            {
                result[idx++] = matrix[i][j--];
                
            }
        }
        
        for(int r=1; r<n; r++)
        {
            int i=r;
            
            for(int j=n-1; i<n; j--)
            {
                result[idx++] = matrix[i++][j];
                
            }
        }

        return result;
        
        
        
        
        
        
        /*
        int n = matrix.length;
        int[][] m = new int[2 *n - 1][2];

        for (int i = 0; i < n; i++) 
        {
           m[i][0] = 0;
            m[i][1] = i;
        }
        
        for (int j = 1; j < n; j++) 
        {
            m[j + n - 1][0] = j;
            m[j +n - 1][1] = n - 1;
        }

        ArrayList<Integer> temp = new ArrayList<>();
        int x, y;
        
        for (int i = 0; i < 2 * n - 1; i++) 
        {
            x = m[i][0];
            y = m[i][1];
            
            while (x < n && y >= 0) 
            {
                temp.add(matrix[x][y]);
                x += 1;
                y -= 1;
                
            }
        }

        int[] result = new int[temp.size()];
        for (int i = 0; i < temp.size(); i++) 
        {
            result[i] = temp.get(i);
            
            
        }

        return result;
        
        
        
        
        */
        
        
        
        
        

    }
}
