

//User function Template for Java

class Solution {
    static ArrayList<ArrayList<Integer>> uniquePerms(ArrayList<Integer> arr , int n) 
    {
        // code here
        
        ArrayList<ArrayList<Integer>> result = new ArrayList<>();
        
        ArrayList<Integer> list = new ArrayList<>();
        
        boolean[] visited = new boolean[n];
        
        Collections.sort(arr);
        
        findPermutation(arr, visited, list, result);
        
        return result;
        
        
        
        
        
        
        /*
        int[] dummy = new int[n];
        for(int i = 0; i<n; i++)
        {
            
            dummy[i] = arr.get(i);
            
        }
        
        
        */
        
        
        
        
        
        
    }
    
    private static void findPermutation(ArrayList<Integer> arr, boolean[] visited, ArrayList<Integer> list, ArrayList<ArrayList<Integer>> result)
    {
        
        
        if(list.size() == arr.size())
        {
            
            result.add(new ArrayList<Integer>(list));
            return;
            
        }
        
        for(int i=0; i<arr.size(); ++i)
        {
            
            if(i > 0 && arr.get(i) == arr.get(i-1) && visited[i-1] == false)
            {
                
                continue;
                
                
            }
            
            if(!visited[i])
            {
                
                visited[i] = true;
                
                list.add(arr.get(i));
                
                findPermutation(arr, visited, list, result);
                
                list.remove(list.size() -1);
                
                visited[i] = false;
                
            }
        }
        
        
        
        
        
    }
    
    
};
