

//User function Template for Java

// class Node  
// { 
//     int data; 
//     Node left, right;
// }

class Solution
{
    public static ArrayList<Integer> KDistanceNodes(Node root, int target , int k)
    {
        // return the sorted list of all nodes at k dist
        
        ArrayList<Integer> list = new ArrayList<>();
        helper(root, target, k, list);
        
        Collections.sort(list);
        
        return list;
        
    }
    
    public static int helper(Node root, int target, int k, ArrayList<Integer> list)
    {
        
        if(root == null)
        {
            return -1;
            
        }
        
        if(root.data == target)
        {
            getKDistanceNodes(root, k-0, null, list);
            
            return 1;
            
        }
        
        int l  = helper(root.left, target, k, list);
        if(l != -1)
        {
            getKDistanceNodes(root, k-l, root.left, list);
            return l+1;
            
        }
        
        int r = helper(root.right, target, k, list);
        if(r != -1)
        {
            getKDistanceNodes(root, k-r, root.right, list);
            return r+1;
            
        }
        
        return -1;
        
        
        
    }
    
    public static void getKDistanceNodes(Node root, int d, Node block, ArrayList<Integer> list)
    {
        
        
        if(root == null || d<0 || root == block)
        {
            return;
            
        }
        
        if(d ==0)
        {
            list.add(root.data);
            return;
            
        }
        
        
        getKDistanceNodes(root.left, d-1, block, list);
        getKDistanceNodes(root.right, d-1, block, list);
        
    }
    
    
    
};
