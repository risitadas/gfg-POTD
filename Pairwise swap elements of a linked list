/* node class of the linked list

class Node
{
    int data;
    Node next;
    Node(int key)
    {
        data = key;
        next = null;
    }
}

*/


class Solution {
    // Function to pairwise swap elements of a linked list.
    // It should returns head of the modified list
    public Node pairwiseSwap(Node head)
    {
        // code here
        
        if(head == null || head.next == null)
        {
            return head;
            
        }
        
        Node curr = head;
        head = curr.next;
        Node prev = curr;
        
        while(curr != null && curr.next != null)
        {
            Node dummy = curr.next.next;
            curr.next.next = curr;
            curr.next = dummy;
            curr = dummy;
            
            
            if(curr != null && curr.next != null)
            {
                prev.next = curr.next;
                prev = curr;
                
            }
        }
        
        
        return head;
        
        
        
        /*
        Node start = head, second = null, third = null;
        Node prev = null;
        
        while(start != null && start.next != null)
        {
            second = start.next;
            third = second.next;
            
            if(start ==head)
            {
                head = second;
                
            }
            else
            {
                prev.next = second;
                
            }
            
            second.next = start;
            start.next = third;
            
            prev = start;
            start = third;
            
            
        }
        
        return head;
        
        */
        
        
        
        
    }
}
